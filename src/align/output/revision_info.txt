arguments: /home/train/git-workspace/facenetDemo/facenet/src/align/align_dataset_mtcnn.py /home/train/git-workspace/facenetDemo/facenet/src/align/input /home/train/git-workspace/facenetDemo/facenet/src/align/output
--------------------
tensorflow version: 1.7.0
--------------------
git hash: b'e1f666817cd36cca8f70d5387dd811a51d703730'
--------------------
b'diff --git "a/emp/00018\\347\\216\\213\\345\\277\\227\\345\\255\\246/00018\\347\\216\\213\\345\\277\\227\\345\\255\\246.JPG" "b/emp/00018\\347\\216\\213\\345\\277\\227\\345\\255\\246/00018\\347\\216\\213\\345\\277\\227\\345\\255\\246.JPG"\ndeleted file mode 100644\nindex 2a3ae59..0000000\nBinary files "a/emp/00018\\347\\216\\213\\345\\277\\227\\345\\255\\246/00018\\347\\216\\213\\345\\277\\227\\345\\255\\246.JPG" and /dev/null differ\ndiff --git a/emp/2.jpeg b/emp/2.jpeg\ndeleted file mode 100644\nindex 1f1bd63..0000000\nBinary files a/emp/2.jpeg and /dev/null differ\ndiff --git a/emp/3.png b/emp/3.png\ndeleted file mode 100644\nindex d185e20..0000000\nBinary files a/emp/3.png and /dev/null differ\ndiff --git a/emp/4.png b/emp/4.png\ndeleted file mode 100644\nindex 8960a5a..0000000\nBinary files a/emp/4.png and /dev/null differ\ndiff --git a/emp/5.png b/emp/5.png\ndeleted file mode 100644\nindex 40534e0..0000000\nBinary files a/emp/5.png and /dev/null differ\ndiff --git a/src/calSimple.py b/src/calSimple.py\ndeleted file mode 100644\nindex 39c1ef2..0000000\n--- a/src/calSimple.py\n+++ /dev/null\n@@ -1,40 +0,0 @@\n-from __future__ import absolute_import\n-from __future__ import division\n-from __future__ import print_function\n-\n-from scipy import misc\n-import tensorflow as tf\n-import numpy as np\n-import sys\n-import os\n-import copy\n-import argparse\n-import facenet\n-import align.detect_face\n-import loadImage\n-import mytest\n-\n-def calculuate():\n-    image_files, image_size, margin, gpu_memory_fraction,model,first=mytest.main()\n-    images,image_files_list, image_size, margin, gpu_memory_fraction,model=loadImage.loadImage(image_files, image_size, margin, gpu_memory_fraction,model,first)\n-    image_files,embeddings,feed_dict=loadImage.mian( images,image_files_list, image_size, margin, gpu_memory_fraction,model)\n-    with tf.Session() as sess:\n-        emb = sess.run(embeddings, feed_dict)          \n-        nrof_images = len(image_files)\n-        Alldist=[]\n-        for j in range(nrof_images):\n-            dist = np.sqrt(np.sum(np.square(np.subtract(emb[0,:], emb[j,:]))))\n-            Alldist.append(dist);\n-        tempmin=min(Alldist)\n-        Alldist.remove(tempmin)\n-            #print(Alldist)\n-        tempmin2=min(Alldist)\n-        resindex=Alldist.index(tempmin2)\n-            #print(resindex+1)\n-        print(image_files[resindex+1])\n-\n-if __name__ == \'__main__\':\n-    calculuate()\n-            \n-            \n-'